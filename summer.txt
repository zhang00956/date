数据结构关系：
	1.集合	2.线性：一对一	3.树形：一对多
	4.图形：多对多 5.网状
线性
	1.顺序存储结构：
	要求一：数据元素之间地址连续
			数组元素类型相同
	典型：数组
	优点：方便查找，适合数据量小
	缺点：插入和删除需要移动，效率低。地址要求连续，一旦堆空间，
	空间足够但不连续，则失败
	2.链式存储结构：
	单链表：
		struct node_st {
			void *data;
			struct node_st *next;
		};
	双链表：
		struct node_st {
			void *data;
			struct node_st *prev;
			struct node_st *next;
		};
	优点：插入和删除方便。地址式不连续的，充分使用堆空间
	适用用数据量相对较多，方便改动.
	缺点：查找慢

栈：
	是用特殊的线性表。
	只允许在表的同一端进行插入和删除。

	


